{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/core.js","webpack:///./src/components/canvas.js","webpack:///./src/components/snake.js","webpack:///./src/components/toolbar.js","webpack:///./src/components/game-over.js","webpack:///./src/components/app.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Core","this","canvasWidth","canvasHeight","gridColor","gridSize","raf","Canvas","canvas","document","getElementById","setAttribute","ctx","getContext","y","x","iEqual","point","moveTo","lineTo","strokeStyle","stroke","Snake","direction","chunks","speed","color","targetColor","targetPosition","getRandomDirection","createChunks","initEvents","length","clearChunk","clearSize","clearRect","updateChunks","chunk","fillStyle","fillRect","chunksLength","position","getStartPosition","verticalDirection","isVerticalDirection","push","head","newChunkPosition","chunkLength","indexOf","directions","index","Math","floor","random","addChunk","drawTarget","incrementSpeed","preLastChunk","lastChunk","newChunk","assign","some","outPadding","padding","randomX","randomY","keyDownHandler","keyDownListener","addEventListener","window","innerWidth","btnLeft","querySelector","btnLeftHandler","goLeft","btnUp","btnUpHandler","goUp","btnRight","btnRightHandler","goRight","btnDown","btnDownHandler","e","which","goDown","removeEventListener","Toolbar","scoreElement","innerHTML","parseInt","innerText","GameOver","wentAbroad","runOverHimself","App","init","isCanvasSupported","alert","drawGrid","toolbar","gameOver","snake","drawSnake","move","isGameOver","wasted","searchTarget","incrementScore","setTimeout","requestAnimationFrame","classList","add","removeEventListeners","cancelAnimationFrame","gameStart","remove","click"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Core is defins the default properties\r\n */\r\nclass Core {\r\n    constructor () {\r\n        this.canvasWidth = 400;\r\n        this.canvasHeight = 400;\r\n        this.gridColor = 'rgba(0, 0, 0, .4)';\r\n        this.gridSize = 20;\r\n        this.raf = false;\r\n    }\r\n}\r\n\r\nexport default Core;","import Core from './core';\r\n\r\n/**\r\n * Canvas class creating main canvas\r\n */\r\nclass Canvas extends Core {\r\n    constructor () {\r\n        super();\r\n        this.canvas = document.getElementById('canvas');\r\n        this.canvas.setAttribute('width', this.canvasWidth + 1 + 'px');\r\n        this.canvas.setAttribute('height', this.canvasHeight + 1 + 'px');\r\n        this.ctx = this.canvas.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * Method drawing grid into canvas\r\n     * For each line we should add 0.5 px, it's hack to draw thinner lines\r\n     */\r\n    drawGrid () {\r\n        const drawVerticalLine = x => {\r\n            this.ctx.moveTo(x, 0);\r\n            this.ctx.lineTo(x, this.canvasHeight + 0.5);\r\n        };\r\n\r\n        const drawHorizontalLine = y => {\r\n            this.ctx.moveTo(0, y);\r\n            this.ctx.lineTo(this.canvasWidth + 0.5, y);\r\n        };\r\n\r\n        const iEqual = this.canvasWidth - this.gridSize;\r\n        for (let i = this.gridSize; i <= iEqual; i += this.gridSize) {\r\n            const point = i + 0.5;\r\n            drawVerticalLine(point);\r\n            drawHorizontalLine(point);\r\n            this.ctx.strokeStyle = this.gridColor;\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return, is context of canvas is supported or not\r\n     * @returns {*}\r\n     */\r\n    isCanvasSupported () {\r\n        return this.canvas.getContext;\r\n    }\r\n\r\n}\r\n\r\nexport default Canvas;","import Core from './core';\r\n\r\n/**\r\n * Snake class is responsible for draw and manipulate of snake object\r\n */\r\nclass Snake extends Core {\r\n    constructor () {\r\n        super();\r\n        this.canvas = document.getElementById('snake');\r\n        this.canvas.setAttribute('width', this.canvasWidth + 1 + 'px');\r\n        this.canvas.setAttribute('height', this.canvasHeight + 1 + 'px');\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.direction = 'up';\r\n        this.chunks = [];\r\n        this.speed = 5;\r\n        this.color = 'rgba(121, 169, 26, .7)';\r\n\r\n        this.targetColor = 'rgba(82, 113, 20, 0.7)';\r\n        this.targetPosition = { x: 0, y: 0 };\r\n\r\n        this.getRandomDirection();\r\n\r\n        this.createChunks(2);\r\n\r\n        this.initEvents();\r\n    }\r\n\r\n    /**\r\n     * Render snake\r\n     * Before each render, clearing last chunk of snake on canvas and update array with all chunks\r\n     */\r\n    drawSnake () {\r\n        const length = this.chunks.length - 1;\r\n        const clearChunk = this.chunks[length];\r\n        const clearSize = this.gridSize + 0.5;\r\n        this.ctx.clearRect(clearChunk.x - 0.2, clearChunk.y - 0.2, clearSize, clearSize);\r\n\r\n        this.updateChunks();\r\n\r\n        for (let i = 0; i < this.chunks.length; i++) {\r\n            const chunk = this.chunks[i];\r\n            this.ctx.fillStyle = this.color;\r\n            this.ctx.fillRect(chunk.x, chunk.y, this.gridSize, this.gridSize);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creating array which contain an objects with position of each chunk\r\n     * Get snake position with offset of 5 squares from border\r\n     * Determine the current moving direction\r\n     * @param chunksLength {Number} - default snake length\r\n     */\r\n    createChunks (chunksLength) {\r\n        const position = this.getStartPosition(5);\r\n        const verticalDirection = this.isVerticalDirection();\r\n        for (let i = 0; i < chunksLength; i++) {\r\n            let x = position.x;\r\n            let y = position.y;\r\n            if (verticalDirection) {\r\n                y -= i * this.gridSize;\r\n            } else {\r\n                x -= i * this.gridSize;\r\n            }\r\n            this.chunks.push({ x: x, y: y })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updating chunks position\r\n     * All chunks are depends of first chunk which is a snake's head,\r\n     * so we increment the X or Y position of first chunk, and override positions of others\r\n     */\r\n    updateChunks () {\r\n        let head = { ...this.chunks[0] };\r\n        head = this.newChunkPosition(head);\r\n        let chunks = [head];\r\n\r\n        const chunkLength = this.chunks.length;\r\n        for (let i = 1; i < chunkLength; i++) {\r\n            chunks.push(this.chunks[i-1]);\r\n        }\r\n\r\n        this.chunks = chunks;\r\n    }\r\n\r\n    /**\r\n     * Getting new chunk position, which depends of snake direction\r\n     * @param head {Number}\r\n     * @returns {Number}\r\n     */\r\n    newChunkPosition (head) {\r\n        const verticalDirection = this.isVerticalDirection();\r\n\r\n        if (verticalDirection) {\r\n            if (['up', 'left'].indexOf(this.direction) >= 0)  head.y -= this.gridSize;\r\n            else head.y += this.gridSize;\r\n        } else {\r\n            if (['up', 'left'].indexOf(this.direction) >= 0)  head.x -= this.gridSize;\r\n            else head.x += this.gridSize;\r\n        }\r\n\r\n        return head;\r\n    }\r\n\r\n    /**\r\n     * Getting random direction of moving snake\r\n     */\r\n    getRandomDirection () {\r\n        const directions = ['up', 'down', 'left', 'right'];\r\n        const index = Math.floor(Math.random() * directions.length);\r\n        this.direction = directions[index];\r\n    }\r\n\r\n    /**\r\n     * Determining, did we caught the target or not\r\n     * If we did:\r\n     * - add new chunk to snake's tail\r\n     * - draw new target\r\n     * - increment snake speed\r\n     * @returns {boolean}\r\n     */\r\n    searchTarget () {\r\n        const head = this.chunks[0];\r\n        if (head.x !== this.targetPosition.x || head.y !== this.targetPosition.y) {\r\n            return false;\r\n        }\r\n\r\n        this.addChunk();\r\n        this.drawTarget();\r\n        this.incrementSpeed();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Add new chunk to snake tail in right direct\r\n     * To do this, we need to know in what direction we moving and comparing the position of last and penultimate chunk\r\n     */\r\n    addChunk () {\r\n        const preLastChunk = this.chunks[this.chunks.length - 2];\r\n        const lastChunk = this.chunks[this.chunks.length - 1];\r\n        const newChunk = Object.assign({}, lastChunk);\r\n\r\n        const verticalDirection = this.isVerticalDirection();\r\n\r\n        if (verticalDirection) {\r\n            if (this.direction === 'right') {\r\n                if (lastChunk.x !== preLastChunk.x) { newChunk.x -= this.gridSize; }\r\n            } else if (this.direction === 'left') {\r\n                if (lastChunk.x !== preLastChunk.x) { newChunk.x += this.gridSize; }\r\n            } else if (this.direction === 'up') {\r\n                if (lastChunk.y !== preLastChunk.y) { newChunk.y += this.gridSize; }\r\n            } else if (this.direction === 'down') {\r\n                if (lastChunk.y !== preLastChunk.y) { newChunk.y -= this.gridSize; }\r\n            }\r\n        } else {\r\n            if (this.direction === 'right') {\r\n                if (lastChunk.x !== preLastChunk.x) { newChunk.x -= this.gridSize; }\r\n            } else if (this.direction === 'left') {\r\n                if (lastChunk.x !== preLastChunk.x) { newChunk.x += this.gridSize; }\r\n            } else if (this.direction === 'up') {\r\n                if (lastChunk.y !== preLastChunk.y) { newChunk.y -= this.gridSize; }\r\n            } else if (this.direction === 'down') {\r\n                if (lastChunk.y !== preLastChunk.y) { newChunk.y += this.gridSize; }\r\n            }\r\n        }\r\n\r\n        this.chunks.push(newChunk);\r\n    }\r\n\r\n    /**\r\n     * Draw a target which the snake should catch\r\n     * To do this, create a random position on the canvas\r\n     * And if position of target is not duplicate on of the snake positions, do it.\r\n     * If not, recall method again\r\n     * @returns {*}\r\n     */\r\n    drawTarget () {\r\n        this.targetPosition = this.getStartPosition(1);\r\n\r\n        const duplicatePosition = this.chunks.some(chunk => {\r\n            return chunk.x === this.targetPosition.x && chunk.y === this.targetPosition.y;\r\n        });\r\n\r\n        if (duplicatePosition) {\r\n            return this.drawTarget();\r\n        }\r\n\r\n        this.ctx.fillStyle = this.targetColor;\r\n        this.ctx.fillRect(this.targetPosition.x, this.targetPosition.y, this.gridSize, this.gridSize);\r\n    }\r\n\r\n    /**\r\n     * Simplicity in determining the direction\r\n     * @returns {boolean}\r\n     */\r\n    isVerticalDirection () {\r\n        return ['up', 'down'].indexOf(this.direction) >= 0;\r\n    }\r\n\r\n    /**\r\n     * Increment speed\r\n     */\r\n    incrementSpeed () {\r\n        this.speed += 0.5;\r\n    }\r\n\r\n    /**\r\n     * Creating start position\r\n     * @param outPadding\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    getStartPosition (outPadding) {\r\n        const padding = this.gridSize * outPadding;\r\n        let randomX = Math.floor(Math.random() * (this.canvasWidth - padding * 2) + padding);\r\n        randomX = randomX - (randomX % this.gridSize);\r\n\r\n        let randomY = Math.floor(Math.random() * (this.canvasWidth - padding * 2) + padding);\r\n        randomY = randomY - (randomY % this.gridSize);\r\n\r\n        // добавляем по + 0.5, чтобы визуально объект не выходил за рамку\r\n        return {\r\n            x: randomX + 0.5,\r\n            y: randomY + 0.5\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize events for desktop and mobile devices\r\n     */\r\n    initEvents () {\r\n        this.keyDownHandler = this.keyDownListener.bind(this);\r\n        document.addEventListener('keydown', this.keyDownHandler);\r\n\r\n        if (window.innerWidth) {\r\n            this.btnLeft = document.querySelector('.btn-left');\r\n            this.btnLeftHandler = this.goLeft.bind(this);\r\n            this.btnLeft.addEventListener('click', this.btnLeftHandler);\r\n\r\n            this.btnUp = document.querySelector('.btn-up');\r\n            this.btnUpHandler = this.goUp.bind(this);\r\n            this.btnUp.addEventListener('click', this.btnUpHandler);\r\n\r\n            this.btnRight = document.querySelector('.btn-right');\r\n            this.btnRightHandler = this.goRight.bind(this);\r\n            this.btnRight.addEventListener('click', this.btnRightHandler);\r\n\r\n            this.btnDown = document.querySelector('.btn-down');\r\n            this.btnDownHandler = this.goLeft.bind(this);\r\n            this.btnDown.addEventListener('click', this.btnDownHandler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changing direction by press buttons\r\n     * @param e\r\n     * @returns {boolean}\r\n     */\r\n    keyDownListener (e) {\r\n        switch (e.which) {\r\n            case 37: return this.goLeft();\r\n            case 38: return this.goUp();\r\n            case 39: return this.goRight();\r\n            case 40: return this.goDown();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changing the direction to left\r\n     */\r\n    goLeft () {\r\n        if (this.direction === 'right') return false;\r\n        this.direction = 'left';\r\n    }\r\n\r\n    /**\r\n     * Changing the direction to down\r\n     */\r\n    goUp () {\r\n        if (this.direction === 'down') return false;\r\n        this.direction = 'up';\r\n    }\r\n\r\n    /**\r\n     * Changing the direction to left\r\n     */\r\n    goRight () {\r\n        if (this.direction === 'left') return false;\r\n        this.direction = 'right';\r\n    }\r\n\r\n    /**\r\n     * Changing the direction to up\r\n     */\r\n    goDown () {\r\n        if (this.direction === 'up') return false;\r\n        this.direction = 'down';\r\n    }\r\n\r\n    /**\r\n     * Removing all event listeners\r\n     */\r\n    removeEventListeners () {\r\n        document.removeEventListener('keydown', this.keyDownHandler);\r\n        if (window.innerWidth) {\r\n            this.btnLeft.removeEventListener('click', this.btnLeftHandler);\r\n            this.btnUp.removeEventListener('click', this.btnUpHandler);\r\n            this.btnRight.removeEventListener('click', this.btnRightHandler);\r\n            this.btnDown.removeEventListener('click', this.btnDownHandler);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Snake;","/**\r\n * Toolbar should edit the score\r\n */\r\nclass Toolbar {\r\n    constructor () {\r\n        this.scoreElement = document.getElementById('score');\r\n        this.scoreElement.innerHTML = '0';\r\n    }\r\n\r\n    incrementScore () {\r\n        this.scoreElement.innerHTML = parseInt(this.scoreElement.innerText) + 1;\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import Core from \"./core\";\r\n\r\n/**\r\n * GameOver class is determining methods which contains validation, is game over\r\n */\r\nclass GameOver extends Core {\r\n    /**\r\n     * Check all possible loose events\r\n     * @param head {Object} - first snake's chunk, which contain current position\r\n     * @returns {*|boolean}\r\n     */\r\n    isGameOver (head) {\r\n        return this.wentAbroad(head) || this.runOverHimself(head)\r\n    }\r\n\r\n    /**\r\n     * If the snake's head has crossed the border\r\n     * @param head\r\n     * @returns {boolean}\r\n     */\r\n    wentAbroad (head) {\r\n        return head.x < 0 || head.y < 0 || head.x > this.canvasWidth || head.y > this.canvasHeight;\r\n    }\r\n\r\n    /**\r\n     * If the snake move over herself\r\n     * @param head\r\n     * @returns {boolean}\r\n     */\r\n    runOverHimself (head) {\r\n        return false;\r\n        // return this.snake.chunks.some(function (chunk, i) {\r\n        //   return i > 2 && (chunk.x === head.x && chunk.y === head.y);\r\n        // });\r\n    }\r\n\r\n}\r\n\r\nexport default GameOver;","import Core from './core';\r\nimport Canvas from \"./canvas\";\r\nimport Snake from './snake';\r\nimport Toolbar from './toolbar';\r\nimport GameOver from './game-over';\r\n\r\nclass App extends Core {\r\n    constructor () {\r\n        super();\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Initialize general components\r\n     */\r\n    init () {\r\n        this.canvas = new Canvas();\r\n        const isSupported = this.canvas.isCanvasSupported();\r\n        if (!isSupported) {\r\n            return alert('Canvas is not supported');\r\n        }\r\n\r\n        this.canvas.drawGrid();\r\n\r\n        this.toolbar = new Toolbar();\r\n        this.gameOver = new GameOver();\r\n\r\n        this.snake = new Snake();\r\n        this.snake.drawSnake();\r\n        this.snake.drawTarget();\r\n        this.move();\r\n    }\r\n\r\n    /**\r\n     * Method invoked for move snake on a grid\r\n     * Every step we must:\r\n     * Check, if current position is successful or not\r\n     * Check, did we found a target\r\n     * Call next render\r\n     * @returns {boolean}\r\n     */\r\n    move () {\r\n        this.snake.drawSnake();\r\n\r\n        const isGameOver = this.gameOver.isGameOver(this.snake.chunks[0])\r\n        if (isGameOver) {\r\n            this.wasted();\r\n            return false;\r\n        }\r\n\r\n        const foundTarget = this.snake.searchTarget();\r\n        if (foundTarget) {\r\n            this.toolbar.incrementScore();\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.raf = window.requestAnimationFrame(this.move.bind(this));\r\n        }, (1000 / this.snake.speed));\r\n    }\r\n\r\n    /**\r\n     * Method invoked when game is over\r\n     * Show game over label\r\n     * Delete existing listeners\r\n     * Cancel from animation loop\r\n     */\r\n    wasted () {\r\n        document.querySelector('.game-over').classList.add(\"active\");\r\n        this.snake.removeEventListeners();\r\n        window.cancelAnimationFrame(this.raf);\r\n    }\r\n}\r\n\r\nexport default App;","import App from './components/app';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    let app;\r\n\r\n    // Add event listener to \"start\" button\r\n    const gameStart = document.querySelector('.game-start');\r\n    gameStart.addEventListener('click',() => {\r\n        gameStart.classList.add(\"hide\");\r\n        app = new App();\r\n    });\r\n\r\n    // Add event listener to \"game over\" button\r\n    const gameOver = document.querySelector('.game-over');\r\n    gameOver.addEventListener('click',() => {\r\n        gameOver.classList.remove(\"active\");\r\n        gameStart.click();\r\n    });\r\n});\r\n"],"sourceRoot":""}